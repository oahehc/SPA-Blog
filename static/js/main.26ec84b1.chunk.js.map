{"version":3,"sources":["serviceWorker.js","components/logo/Logo.jsx","components/header/Header.jsx","components/about/About.jsx","components/nav/Nav.jsx","components/msg/Msg.jsx","reducers/msg.js","containers/Msg.jsx","utils.js","components/spinner/Spinner.jsx","components/home/Home.jsx","reducers/posts.js","containers/Home.jsx","components/post-edit/PostEdit.jsx","containers/PostEdit.jsx","components/post-list/PostList.jsx","containers/PostList.jsx","components/article/CodeBlock.js","components/article/Article.jsx","containers/Article.jsx","containers/App.js","reducers/index.js","index.js"],"names":["Boolean","window","location","hostname","match","Logo","className","to","Header","About","Nav","state","prevScrollPos","pageYOffset","isFixed","handleScroll","currentScrollPos","setState","addEventListener","this","removeEventListener","exact","activeClassName","Component","MsgContent","hideMsg","props","timer","setTimeout","clearTimeout","msg","isSuccess","type","successMsg","errorMsg","Msg","isActive","HIDE_MSG","SHOW_MSG","initState","addPost","deletePost","updatePost","showMsg","msgType","result","mapDispatchToProps","connect","getDate","dateOrigin","Date","toDateString","substr","getYear","Spinner","sizeUnit","size","color","loading","ListContent","item","createdAt","title","body","ListImg","src","loader","Home","getLimitPosts","postList","map","id","key","pic","withRouter","GET_ALL_POSTS","GET_LIMIT_POSTS","GET_POST","post","baseUrl","getPost","payload","axios","get","sort","posts","PostEditBtn","PostEdit","author","handleChange","e","target","name","value","handleSubmit","preventDefault","history","params","onSubmit","defaultValue","onChange","required","cols","rows","then","push","catch","err","console","log","put","Item","PostList","getAllPosts","length","CodeBlock","language","style","rainbow","React","PureComponent","defaultProps","ArticleInfo","ArticleImg","alt","ArticleOperate","handleDelete","onClick","ArticleBody","source","renderers","code","Article","isLoaded","delete","App","basename","process","path","component","reducer","combineReducers","action","data","storeWithMiddleware","applyMiddleware","promise","logger","createStore","ReactDOM","render","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.26ec84b1.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Logo = () => (\n  <Link className=\"main-logo\" to=\"/\">\n    For beginner\n    <span>React Learning</span>\n  </Link>\n);\n\nexport default Logo;\n","import React from 'react';\nimport Logo from './../logo/Logo';\n\nconst Header = () => (\n  <header className=\"header\">\n    <Logo />\n    <p className=\"header__description\">此站是學習 React 的練習作品，文章是幫自己加強印象的學習筆記，Happy Coding !</p>\n  </header>\n);\n\nexport default Header;\n","import React from 'react';\n\nconst About = () => (\n  <p>🎅🧙‍♂️🧛🧜‍♂️🧞‍♀️</p>\n);\n\nexport default About;\n","import React, { Component } from 'react';\nimport { NavLink } from \"react-router-dom\";\nimport Logo from './../logo/Logo';\n\nclass Nav extends Component {\n  state = {\n    prevScrollPos: window.pageYOffset, // => 儲存 scroll 位置\n    isFixed: false,\n  };\n\n  componentDidMount() {\n    window.addEventListener(\"scroll\", this.handleScroll);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"scroll\", this.handleScroll);\n  }\n\n  // 往上滑才 fixed ( 到最上面取消 fixed )\n  handleScroll = () => {\n    const { prevScrollPos } = this.state;\n    const currentScrollPos = window.pageYOffset;\n    const isFixed = prevScrollPos > currentScrollPos && currentScrollPos;\n\n    this.setState({\n      prevScrollPos: currentScrollPos,\n      isFixed\n    });\n  };\n\n  render() {\n    const { isFixed } = this.state;\n    return (\n      <nav\n        className={`navbar ${isFixed ? 'fixed' : ''}`} >\n        <ul className=\"navbar__list\">\n          <li><Logo /></li>\n          <li><NavLink exact to=\"/\" activeClassName=\"active\">Home</NavLink></li>\n          <li><NavLink to=\"/posts\" activeClassName=\"active\">List</NavLink></li>\n          <li><NavLink to=\"/about\" activeClassName=\"active\">About</NavLink></li>\n          <li><NavLink to=\"/add-post\" activeClassName=\"active\">AddPost</NavLink></li>\n        </ul>\n      </nav>\n    )\n  }\n};\n\nexport default Nav;","import React, { Component } from 'react';\n\nclass MsgContent extends Component {\n  componentDidMount() {\n    const { hideMsg } = this.props;\n    this.timer = setTimeout(() => {\n      hideMsg();\n    }, 2000);\n  }\n\n  componentWillUnmount() {\n    clearTimeout(this.timer);\n  }\n\n  render() {\n    const { msg } = this.props;\n    return (\n      <div className='msg'>\n        {\n          msg.isSuccess ?\n            msg[msg.type].successMsg :\n            msg[msg.type].errorMsg\n        }\n      </div>\n    )\n  }\n}\n\nconst Msg = ({ msg, hideMsg }) => (\n  msg.isActive && <MsgContent msg={msg} hideMsg={hideMsg} />\n)\n\nexport default Msg;","// action types\nconst HIDE_MSG = 'HIDE_MSG'\nconst SHOW_MSG = 'SHOW_MSG'\n\nconst initState = {\n  isActive: false,\n  isSuccess: false,\n  type: '',\n  addPost: {\n    successMsg: '新增文章成功',\n    errorMsg: '新增文章失敗',\n  },\n  deletePost: {\n    successMsg: '刪除文章成功',\n    errorMsg: '刪除文章失敗',\n  },\n  updatePost: {\n    successMsg: '編輯文章成功',\n    errorMsg: '編輯文章失敗',\n  },\n}\n\n// reducer\nexport default function msgReducer(state = initState, action) {\n  console.log('call msg reducer');\n  switch (action.type) {\n    case SHOW_MSG:\n      return {\n        ...state,\n        isActive: true,\n        isSuccess: action.result,\n        type: action.msgType,\n      }\n\n    case HIDE_MSG:\n      return {\n        ...state,\n        isActive: false,\n      }\n\n    default:\n      return state\n  }\n}\n\n// action creators\nexport const showMsg = (msgType, result) => {\n  return {\n    type: SHOW_MSG,\n    result,\n    msgType,\n  }\n}\n\nexport const hideMsg = () => {\n  return {\n    type: HIDE_MSG,\n  }\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Msg from './../components/msg/Msg';\nimport { hideMsg } from '../reducers/msg';\n\nconst MsgContainer = props => (<Msg {...props} />);\n\nconst mapStateToProps = ({ msg }) => ({ msg });\nconst mapDispatchToProps = { hideMsg };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MsgContainer)","export function getDate(dateOrigin) {\n  if (!dateOrigin) return 'who knows ?';\n  const date = new Date(dateOrigin);\n  return date.toDateString().substr(4, 6);\n}\n\nexport function getYear(dateOrigin) {\n  if (!dateOrigin) return 'who knows ?';\n  const date = new Date(dateOrigin);\n  return date.toDateString().substr(-4);\n}\n\nexport default { getDate, getYear };","import React from 'react';\nimport SyncLoader from 'react-spinners/SyncLoader';\nimport './Spinner.scss'\n\nconst Spinner = () => (\n  <div className='spinner'>\n    <SyncLoader\n      sizeUnit={\"px\"}\n      size={10}\n      color={'#25d0fec2'}\n      loading={true}\n    />\n  </div>\n)\n\nexport default Spinner;","import React, { Component } from 'react';\nimport { withRouter, Link } from 'react-router-dom';\nimport { getDate } from './../../utils';\nimport Spinner from '../spinner/Spinner';\nimport Img from 'react-image';\n\nconst ListContent = ({ item }) => (\n  <div className=\"home-list__item-inner\">\n    <div className=\"home-list__title\">\n      <span>{getDate(item.createdAt)}</span>\n      <h3>{item.title}</h3>\n    </div>\n    <p className=\"home-list__description\"> {item.body} </p>\n  </div>\n)\n\nconst ListImg = ({ src }) => (\n  <div className=\"pic\">\n    <Img src={src} loader={<Spinner />} />\n  </div>\n);\n\n\nclass Home extends Component {\n  componentWillMount() {\n    const { getLimitPosts } = this.props;\n    getLimitPosts();\n  }\n\n  render() {\n    const { postList } = this.props;\n    return (\n      <div className=\"home-list\">\n        {\n          postList.map((item, id) => (\n            <section key={id} className=\"home-list__item\">\n              <Link to={`/posts/${item.id}`}>\n                <ListImg src={item.pic} />\n                <ListContent item={item} />\n              </Link>\n            </section>\n          ))\n        }\n      </div>\n    )\n  }\n}\n\nexport default withRouter(Home);\n","import axios from 'axios';\n\n// action types\nconst GET_ALL_POSTS = 'GET_ALL_POSTS'\nconst GET_LIMIT_POSTS = 'GET_LIMIT_POSTS'\nconst ADD_POST = 'ADD_POST'\nconst DELETE_POST = 'DELETE_POST'\nconst GET_POST = 'GET_POST'\nconst UPDATE_POST = 'UPDATE_POST'\n\n\nconst initState = {\n  postList: [],\n  post: {}\n}\n\n// reducer\nexport default function postsReducer(state = initState, action) {\n  switch (action.type) {\n\n    case GET_ALL_POSTS:\n    case GET_LIMIT_POSTS:\n      return {\n        ...state,\n        postList: action.payload.data\n      }\n\n    case GET_POST:\n      return {\n        ...state,\n        post: action.payload.data\n      }\n\n    default:\n      return state\n  }\n}\n\n\n// url parameters\nconst baseUrl = 'http://blog-api.yakim.tw/posts';\nconst sort = '_sort=id';\nconst sortASC = sort + '&_order=asc';\nconst sortDESC = sort + '&_order=desc';\n\nconst LIMIT_NUM = 5;\nconst limit = '_limit=' + LIMIT_NUM;\n\n\n// action creators\nexport const getAllPosts = () => {\n  return {\n    type: GET_ALL_POSTS,\n    payload: axios.get(`${baseUrl}?${sortDESC}`)\n  }\n}\n\nexport const getLimitPosts = () => {\n  return {\n    type: GET_LIMIT_POSTS,\n    payload: axios.get(`${baseUrl}?${sortASC}&${limit}`)\n  }\n}\n\nexport const getPost = (id) => {\n  return {\n    type: GET_POST,\n    payload: axios.get(`${baseUrl}/${id}`)\n  }\n}\n\nexport const addPost = (post, history, showMsg) => {\n  return {\n    type: ADD_POST,\n    payload: axios.post(baseUrl, post)\n      .then(() => {\n        showMsg('addPost', true);\n        history.push('/posts')\n      })\n      .catch((err) => {\n        console.log(err);\n        showMsg('addPost', false);\n      })\n  }\n}\n\nexport const deletePost = (id, history, showMsg) => {\n  return {\n    type: DELETE_POST,\n    payload: axios.delete(`${baseUrl}/${id}`)\n      .then(() => {\n        showMsg('deletePost', true);\n        history.push('/posts');\n      })\n      .catch((err) => {\n        console.log(err);\n        showMsg('deletePost', false);\n      })\n  }\n}\n\nexport const updatePost = (id, post, history, showMsg) => {\n  return {\n    type: UPDATE_POST,\n    payload: axios.put(`${baseUrl}/${id}`, post)\n      .then(() => {\n        showMsg('updatePost', true);\n        history.push(`/posts/${id}`)\n      })\n      .catch((err) => {\n        console.log(err);\n        showMsg('updatePost', false);\n      })\n  }\n}\n\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Home from './../components/home/Home';\nimport { getLimitPosts } from '../reducers/posts';\n\nconst HomeContainer = props => (<Home {...props} />);\n\nconst mapStateToProps = ({ posts }) => ({ postList: posts.postList });\nconst mapDispatchToProps = { getLimitPosts }\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomeContainer)","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nconst PostEditBtn = ({ id }) => (\n  <>\n    <button type=\"submit\" className=\"add-post__submit btn-submit\">Submit</button>\n    {id && <Link className=\"btn-back\" to=\"/posts\">Back</Link>}\n  </>\n);\n\nclass PostEdit extends Component {\n  constructor(props) {\n    super(props);\n    this.id = this.props.match.params.id;\n  }\n\n  state = {\n    author: '',\n    title: '',\n    body: '',\n  }\n\n  // 編輯文章頁面，把 store.post 當成 state 預設值\n  componentWillMount() {\n    if (this.id) {\n      const { getPost, post } = this.props;\n      getPost(this.id);\n      this.setState(post);\n    }\n  }\n\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    })\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const { history, addPost, updatePost, showMsg } = this.props;\n\n    if (!this.id) {\n      addPost(this.state, history, showMsg);\n    } else {\n      updatePost(this.id, this.state, history, showMsg);\n    }\n  }\n\n  render() {\n    const { author, title, body } = this.state;\n    return (\n      <section className=\"add-post\">\n        <h2>{this.id ? '編輯文章' : '新增文章'}</h2>\n\n        <form onSubmit={this.handleSubmit}>\n          <ul>\n            <li className=\"add-post__author\">\n              <input type=\"text\" name='author'\n                defaultValue={author} onChange={this.handleChange} required />\n              <label>文章作者</label>\n            </li>\n            <li className=\"add-post__title\">\n              <input type=\"text\" name='title'\n                defaultValue={title} onChange={this.handleChange} required />\n              <label>文章標題</label>\n            </li>\n            <li className=\"add-post__content\">\n              <label>文章內容</label>\n              <textarea className=\"input-textarea\" cols=\"30\" rows=\"5\"\n                name=\"body\" onChange={this.handleChange}\n                value={body} required></textarea>\n            </li>\n          </ul>\n          <PostEditBtn id={this.id} />\n        </form>\n      </section>\n    )\n  }\n};\n\nexport default PostEdit;","import React from 'react';\nimport { connect } from 'react-redux';\nimport PostEdit from './../components/post-edit/PostEdit';\nimport { addPost, getPost, updatePost } from '../reducers/posts';\nimport { showMsg } from '../reducers/msg';\n\nconst PostEditContainer = props => (<PostEdit {...props} />);\n\nconst mapStateToProps = ({ posts }) => ({ post: posts.post });\nconst mapDispatchToProps = { addPost, getPost, updatePost, showMsg }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PostEditContainer)","import React, { Component } from 'react';\nimport Spinner from '../spinner/Spinner';\nimport { withRouter } from 'react-router-dom';\nimport { getDate, getYear } from './../../utils';\nimport { Link } from 'react-router-dom';\n\nconst Item = ({ post }) => {\n  return (\n    <Link to={`/posts/${post.id}`} className='post'>\n      <p className=\"post__date\">\n        <span>{getDate(post.createdAt)}</span>\n        {getYear(post.createdAt)}\n      </p>\n      <h4 className=\"post__title\">{post.title}</h4>\n      <p className=\"post__description\">{post.body}</p>\n    </Link>\n  )\n};\n\nclass PostList extends Component {\n  componentWillMount() {\n    const { getAllPosts } = this.props;\n    getAllPosts();\n  }\n\n  render() {\n    const { postList } = this.props;\n    return (\n      <div className=\"post-list\">\n        {\n          !postList.length ? <Spinner /> : (\n            postList.map(post => (\n              <Item post={post} key={post.id} />\n            ))\n          )\n        }\n      </div>\n    )\n  }\n}\nexport default withRouter(PostList);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PostList from './../components/post-list/PostList';\nimport { getAllPosts } from '../reducers/posts';\n\nconst PostListContainer = props => (<PostList {...props} />);\n\nconst mapStateToProps = ({ posts }) => ({ postList: posts.postList });\nconst mapDispatchToProps = { getAllPosts };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PostListContainer)","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\n\n// 選 style : https://highlightjs.org/\nimport { rainbow } from 'react-syntax-highlighter/dist/esm/styles/hljs';\n\n\nexport default class CodeBlock extends React.PureComponent {\n  static propTypes = {\n    value: PropTypes.string.isRequired,\n    language: PropTypes.string,\n  }\n\n  static defaultProps = {\n    language: null,\n  }\n\n  render() {\n    const { language, value } = this.props;\n\n    return (\n      <SyntaxHighlighter language={language} style={rainbow}>\n        {value}\n      </SyntaxHighlighter>\n    );\n  }\n}","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Spinner from '../spinner/Spinner'\nimport { getDate } from './../../utils';\nimport ReactMarkdown from \"react-markdown\";\nimport CodeBlock from \"./CodeBlock\";\n\n\nconst ArticleInfo = ({ post }) => (\n  <div className=\"article__info\">\n    <p className=\"article__author\">{post.author}</p>\n    <p className=\"article__date\">{getDate(post.createdAt)}</p>\n  </div>\n)\n\nconst ArticleImg = ({ post }) => (\n  !post.pic ? null : (\n    <div className=\"pic article__cover\">\n      <img src={post.pic} alt=\"\" />\n    </div>\n  )\n)\n\nconst ArticleOperate = ({ post, handleDelete }) => (\n  <div className=\"article__operate\">\n    <Link className=\"btn btn-back active\" to='/posts'>Back</Link>\n    <Link className=\"btn btn-edit\" to={`/edit-post/${post.id}`}>Edit</Link>\n    <button className=\"btn btn-delete\" onClick={handleDelete}>Delete</button>\n  </div>\n)\n\nconst ArticleBody = ({ post }) => (\n  <div className=\"article__body\">\n    <ReactMarkdown\n      source={post.body}\n      renderers={{ code: CodeBlock }}\n    />\n  </div>\n)\n\nclass Article extends Component {\n  state = {\n    isLoaded: false\n  }\n\n  componentWillMount() {\n    const { getPost } = this.props;\n    const postId = this.props.match.params.id;\n    getPost(postId);\n  }\n\n  componentDidUpdate() {\n    const { isLoaded } = this.state;\n    if (isLoaded) return;\n    this.setState({ isLoaded: true })\n  }\n\n  handleDelete = () => {\n    const { post, deletePost, history, showMsg } = this.props;\n    deletePost(post.id, history, showMsg)\n  }\n\n  render() {\n    const { post } = this.props;\n    const { isLoaded } = this.state;\n    return (\n      !isLoaded ? <Spinner /> : (\n        <section className=\"article\">\n          <h2 className=\"article__title\">{post.title}</h2>\n          <ArticleImg {...this.props} />\n          <ArticleBody {...this.props} />\n          <ArticleInfo {...this.props} />\n          <ArticleOperate {...this.props} handleDelete={this.handleDelete} />\n        </section>\n      )\n    )\n  }\n};\n\nexport default Article;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Article from './../components/article/Article';\nimport { getPost, deletePost } from '../reducers/posts';\nimport { showMsg } from '../reducers/msg';\n\nconst ArticleContainer = props => (<Article {...props} />);\n\nconst mapStateToProps = ({ posts }) => ({ post: posts.post });\nconst mapDispatchToProps = { getPost, deletePost, showMsg }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ArticleContainer)","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport Header from './../components/header/Header'\nimport About from './../components/about/About';\nimport Nav from './../components/nav/Nav';\n\nimport Msg from './Msg';\nimport Home from './Home';\nimport PostEdit from './PostEdit';\nimport PostList from './PostList';\nimport Article from './Article';\nimport './../scss/index.scss';\n\n\n\nclass App extends Component {\n  render() {\n    return (\n      <Router basename={process.env.PUBLIC_URL}>\n        <div className=\"wrapper\" >\n          <Nav />\n          <Header />\n          <main className=\"container\">\n            <Msg />\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"/about\" component={About} />\n            <Route exact path=\"/posts\" component={PostList} />\n            <Route path=\"/posts/:id\" component={Article} />\n            <Route path=\"/add-post\" component={PostEdit} />\n            <Route path=\"/edit-post/:id\" component={PostEdit} />\n          </main>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","import { combineReducers } from \"redux\";\nimport postsReducer from \"./posts\";\nimport msgReducer from \"./msg\";\n\nconst reducer = combineReducers({\n  posts: postsReducer,\n  msg: msgReducer\n});\n\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport promise from 'redux-promise';\nimport App from './containers/App';\nimport reducer from './reducers';\nimport logger from 'redux-logger'\n\nconst storeWithMiddleware = applyMiddleware(\n  promise,\n  logger // => logger must be the last one\n)(createStore);\n\nReactDOM.render(\n  <Provider store={storeWithMiddleware(reducer)}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}