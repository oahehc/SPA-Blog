{"version":3,"sources":["serviceWorker.js","components/logo/Logo.jsx","components/header/Header.jsx","components/about/About.jsx","components/search/Search.jsx","webAPI.js","actions.js","containers/Search.jsx","components/nav/Nav.jsx","containers/Nav.jsx","components/msg/Msg.jsx","containers/Msg.jsx","utils.js","components/spinner/Spinner.jsx","components/home/Home.jsx","containers/Home.jsx","components/post-edit/PostEdit.jsx","containers/PostEdit.jsx","components/post-list/PostList.jsx","containers/PostList.jsx","components/article/CodeBlock.js","components/article/Article.jsx","containers/Article.jsx","containers/App.js","reducers/posts.js","reducers/msg.js","reducers/category.js","reducers/search.js","reducers/index.js","index.js"],"names":["Boolean","window","location","hostname","match","Logo","className","to","Header","About","href","target","rel","Suggestions","results","handleReset","map","list","key","id","onClick","title","Search","state","query","handleChange","e","setState","name","value","clearSearch","props","prevProps","prevState","getSearch","this","length","placeholder","onChange","autoComplete","Component","baseUrl","instance","axios","create","baseURL","timeout","getPost","get","addPost","post","deletePost","delete","updatePost","put","EasyActions","GET_ALL_POSTS","type","payload","sort","GET_LIMIT_POSTS","GET_CATEGORY_POSTS","category","GET_POST","WebAPI","ADD_POST","DELETE_POST","UPDATE_POST","SHOW_MSG","msgType","result","HIDE_MSG","GET_SEARCH","CLEAR_SEARCH","Actions","Constants","mapDispatchToProps","connect","search","Nav","isFixed","handleScroll","pageYOffset","addEventListener","debounce","removeEventListener","htmlFor","exact","activeClassName","item","index","MsgContent","msgContent","successMsg","errorMsg","hideMsg","timer","setTimeout","clearTimeout","msg","isSuccess","Msg","isActive","getDate","dateOrigin","Date","toDateString","substr","getYear","Spinner","sizeUnit","size","color","loading","ListContent","createdAt","body","ListImg","src","loader","Home","getLimitPosts","postList","isLoading","pic","withRouter","posts","PostEditBtn","PostCategory","categoryList","defaultValue","PostEdit","handleSubmit","preventDefault","params","author","history","isLoadingAddPost","isLoadingUpdatePost","addPostError","updatePostError","showMsg","push","onSubmit","required","cols","rows","upadatePostError","PostItem","PostEmptyStatus","role","aria-label","PostSection","PostList","isCategoryList","path","getAllPosts","getCategoryPosts","presentCategory","updateCategory","newCategory","i","filter","CodeBlock","language","style","rainbow","React","PureComponent","defaultProps","ArticleInfo","ArticleCategory","ArticleImg","alt","ArticleBody","source","renderers","code","ArticleOperate","handleDelete","Article","postId","isLoadingDeletePost","deletePostError","presentId","Number","isLoadingGetPost","App","basename","process","component","initState","isLoadingResults","reducer","combineReducers","action","ActionTypes","data","storeWithMiddleware","applyMiddleware","promiseMiddleware","createStore","ReactDOM","render","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f1d38303.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Logo = () => (\n  <Link className=\"main-logo\" to=\"/\">\n    For beginner\n    <span>React Learning</span>\n  </Link>\n);\n\nexport default Logo;\n","import React from 'react';\nimport Logo from './../logo/Logo';\n\nconst Header = () => (\n  <header className=\"header\">\n    <Logo />\n    <p className=\"header__description\">此站是學習 React 的練習作品，文章是幫自己加強印象的學習筆記，Happy Coding !</p>\n  </header>\n);\n\nexport default Header;\n","import React from 'react';\n\nconst About = () => (\n  <section className=\"about\">\n    <p>嗨！ 我是 Yakim，一個還在努力的 <span>Front-End Developer</span> 🎅</p>\n    <p>目前正參加<a href=\"https://github.com/Lidemy/mentor-program-3rd\">程式導師計畫第三期</a>，而這個 blog 也是課程中的練習作品之一。</p>\n\n    <p>用職稱介紹自己顯得有點無聊，所以：</p>\n    <ul>\n      <li>體力很差但又不自量力愛爬山</li>\n      <li>喜歡很燙的食物</li>\n      <li>對 HUNTER×HUNTER 黑暗大陸篇嚴重臉盲</li>\n      <li>朋友聊星座的時候插不上話</li>\n      <li>吃雞排時常感覺口腔被刮傷</li>\n    </ul>\n\n    <blockquote>Feel free to <a href=\"mailto:toromilk80129@gmail.com\" target='_blank' rel='noreferrer noopener'>drop me a message</a> and say hi. 👋</blockquote>\n  </section>\n);\n\nexport default About;\n","import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\n\nconst Suggestions = ({ results, handleReset }) => (\n  results &&\n  <ul className=\"search__result\">\n    {\n      results.map(list => (\n        <li key={list.id}>\n          <Link to={`/posts/${list.id}`} onClick={handleReset}>{list.title}</Link>\n        </li>\n      ))\n    }\n  </ul>\n)\n\nclass Search extends Component {\n  state = {\n    query: '',\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { getSearch } = this.props;\n    const { query } = this.state;\n    if (prevState.query !== query) {\n      if (query.length === 0) {\n        this.handleReset();\n        return;\n      }\n\n      getSearch(query);\n    }\n  }\n\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    })\n  }\n\n  handleReset = () => {\n    const { clearSearch } = this.props;\n    clearSearch();\n    this.setState({\n      query: '',\n    })\n  }\n\n\n  render() {\n    const { query } = this.state;\n    const { results } = this.props;\n    return (\n      <form className=\"search\">\n        <div className=\"input\">\n          <input\n            placeholder=\"Search\"\n            name='query'\n            onChange={this.handleChange}\n            autoComplete=\"off\"\n            value={query}\n          />\n        </div>\n        <button className=\"submit\">\n          <span className=\"fas fa-search\"></span>\n        </button>\n        <Suggestions results={results} handleReset={this.handleReset} />\n      </form>\n    )\n  }\n}\n\n\nexport default Search;\n","import axios from 'axios';\n\n// url parameters\nconst baseUrl = 'https://blog-api.yakim.tw/posts';\nconst sort = '_sort=id';\nconst sortASC = sort + '&_order=asc';\nconst sortDESC = sort + '&_order=desc';\n\nconst LIMIT_NUM = 5;\nconst limit = '_limit=' + LIMIT_NUM;\n\nlet instance = axios.create({\n  baseURL: baseUrl,\n  timeout: 1000,\n});\n\n// action creators\nexport const getAllPosts = () => instance.get(`?${sortDESC}`)\n\nexport const getLimitPosts = () => instance.get(`?${sortASC}&${limit}`)\n\nexport const getCategoryPosts = (category) => instance.get(`?${sortASC}&category=${category}`)\n\nexport const getPost = id => instance.get(`/${id}`)\n\nexport const addPost = post => instance.post(baseUrl, post)\n\nexport const deletePost = id => instance.delete(`/${id}`)\n\nexport const updatePost = (id, post) => instance.put(`/${id}`, post)\n\nexport const getSearch = (query) => instance.get(`?title_like=${query}`)","import EasyActions from \"redux-easy-actions\";\nimport * as WebAPI from './webAPI'\n\nconst { Actions, Constants } = EasyActions({\n  /* posts --------- */\n  GET_ALL_POSTS(type) {\n    return {\n      type,\n      payload: WebAPI.getAllPosts()\n    };\n  },\n\n  GET_LIMIT_POSTS(type) {\n    return {\n      type,\n      payload: WebAPI.getLimitPosts()\n    };\n  },\n\n  GET_CATEGORY_POSTS(type, name) {\n    return {\n      type,\n      payload: WebAPI.getCategoryPosts(name)\n    };\n  },\n\n  GET_POST(type, id) {\n    return {\n      type,\n      payload: WebAPI.getPost(id)\n    };\n  },\n\n  ADD_POST(type, post) {\n    return {\n      type,\n      payload: WebAPI.addPost(post)\n    };\n  },\n\n  DELETE_POST(type, id) {\n    return {\n      type,\n      payload: WebAPI.deletePost(id)\n    };\n  },\n\n  UPDATE_POST(type, post, id) {\n    return {\n      type,\n      payload: WebAPI.updatePost(id, post)\n    };\n  },\n\n\n  /* message --------- */\n  SHOW_MSG(type, msgType, result) {\n    return { type, msgType, result }\n  },\n\n  HIDE_MSG(type) {\n    return { type }\n  },\n\n\n  /* search --------- */\n  GET_SEARCH(type, query) {\n    return {\n      type,\n      payload: WebAPI.getSearch(query)\n    };\n  },\n\n  CLEAR_SEARCH(type) {\n    return { type };\n  },\n\n});\n\nexport { Actions, Constants as ActionTypes };","import React from 'react';\nimport { connect } from 'react-redux';\nimport Search from './../components/search/Search';\nimport { Actions } from './../actions';\n\nconst SearchContainer = props => (<Search {...props} />);\n\nconst mapStateToProps = ({ search }) => ({\n  results: search.results,\n});\nconst mapDispatchToProps = {\n  getSearch: Actions.GET_SEARCH,\n  clearSearch: Actions.CLEAR_SEARCH,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchContainer)","import React, { Component } from 'react';\nimport { NavLink } from \"react-router-dom\";\nimport Logo from './../logo/Logo';\nimport debounce from 'lodash.debounce';\nimport Search from './../../containers/Search';\n\nclass Nav extends Component {\n  state = {\n    isFixed: false,\n  };\n\n  // 加入 debounce 延遲\n  componentDidMount() {\n    window.addEventListener(\"scroll\", debounce(this.handleScroll, 50));\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"scroll\", debounce(this.handleScroll, 50));\n  }\n\n  handleScroll = () => {\n    this.setState({\n      isFixed: window.pageYOffset > 80\n    })\n  };\n\n  render() {\n    const { isFixed } = this.state;\n    const { category } = this.props;\n\n    return (\n      <nav\n        className={`navbar ${isFixed ? 'fixed' : ''}`} >\n        <div className=\"navbar__inner\">\n          <Logo />\n          <input className=\"menu-btn\" type=\"checkbox\" id=\"menu-btn\" />\n          <label className=\"menu-icon\" htmlFor=\"menu-btn\">\n            <span className=\"navicon\"></span>\n          </label>\n          <ul className=\"navbar__list menu\">\n            <li><NavLink exact to=\"/\" activeClassName=\"active\">Home</NavLink></li>\n            <li><NavLink to=\"/posts\" activeClassName=\"active\">List</NavLink></li>\n            <li className=\"dropdown\">\n              <NavLink to=\"/category\" activeClassName=\"active\">Category</NavLink>\n              <div className=\"dropdown-content\">\n                {\n                  category.map((item, index) => (\n                    <NavLink to={`/category/${item}`} key={index}>{item}</NavLink>\n                  ))\n                }\n              </div>\n            </li>\n            <li><NavLink to=\"/about\" activeClassName=\"active\">About</NavLink></li>\n            <li><NavLink to=\"/add-post\" activeClassName=\"active\">AddPost</NavLink></li>\n            <li><Search /></li>\n          </ul>\n        </div>\n      </nav>\n    )\n  }\n};\n\nexport default Nav;","import React from 'react';\nimport { connect } from 'react-redux';\nimport Nav from './../components/nav/Nav';\n\nconst NavContainer = props => (<Nav {...props} />);\n\nconst mapStateToProps = category => category;\n\nexport default connect(mapStateToProps, null)(NavContainer)","import React, { Component } from 'react';\n\nclass MsgContent extends Component {\n  msgContent = {\n    addPost: {\n      successMsg: '新增文章成功',\n      errorMsg: '新增文章失敗',\n    },\n    deletePost: {\n      successMsg: '刪除文章成功',\n      errorMsg: '刪除文章失敗',\n    },\n    updatePost: {\n      successMsg: '編輯文章成功',\n      errorMsg: '編輯文章失敗',\n    },\n  }\n\n  componentDidMount() {\n    const { hideMsg } = this.props;\n    this.timer = setTimeout(hideMsg, 2000);\n  }\n\n  componentWillUnmount() {\n    clearTimeout(this.timer);\n  }\n\n  render() {\n    const { msg } = this.props;\n    return (\n      <div className='msg'>\n        {\n          msg.isSuccess ?\n            this.msgContent[msg.type].successMsg :\n            this.msgContent[msg.type].errorMsg\n        }\n      </div>\n    )\n  }\n}\n\nconst Msg = ({ msg, hideMsg }) => (\n  msg.isActive && <MsgContent msg={msg} hideMsg={hideMsg} />\n)\n\nexport default Msg;","import React from 'react';\nimport { connect } from 'react-redux';\nimport Msg from './../components/msg/Msg';\nimport { Actions } from './../actions';\n\nconst MsgContainer = props => (<Msg {...props} />);\n\nconst mapStateToProps = ({ msg }) => ({ msg });\nconst mapDispatchToProps = {\n  hideMsg: Actions.HIDE_MSG,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MsgContainer)","export function getDate(dateOrigin) {\n  if (!dateOrigin) return 'who knows ?';\n  const date = new Date(dateOrigin);\n  return date.toDateString().substr(4, 6);\n}\n\nexport function getYear(dateOrigin) {\n  if (!dateOrigin) return 'who knows ?';\n  const date = new Date(dateOrigin);\n  return date.toDateString().substr(-4);\n}\n\nexport default { getDate, getYear };","import React from 'react';\nimport SyncLoader from 'react-spinners/SyncLoader';\nimport './Spinner.scss'\n\nconst Spinner = () => (\n  <div className='spinner'>\n    <SyncLoader\n      sizeUnit={\"px\"}\n      size={10}\n      color={'#25d0fec2'}\n      loading={true}\n    />\n  </div>\n)\n\nexport default Spinner;","import React, { Component } from 'react';\nimport { withRouter, Link } from 'react-router-dom';\nimport { getDate } from './../../utils';\nimport Spinner from '../spinner/Spinner';\nimport Img from 'react-image';\n\nconst ListContent = ({ post }) => (\n  <div className=\"home-list__item-inner\">\n    <div className=\"home-list__title\">\n      <span>{getDate(post.createdAt)}</span>\n      <h3>{post.title}</h3>\n    </div>\n    <p className=\"home-list__description\">{post.body}</p>\n  </div>\n)\n\nconst ListImg = ({ src }) => (\n  <div className=\"pic\">\n    <Img src={src} loader={<Spinner />} />\n  </div>\n);\n\n\nclass Home extends Component {\n  componentWillMount() {\n    const { getLimitPosts } = this.props;\n    getLimitPosts();\n  }\n\n  render() {\n    const { postList, isLoading } = this.props;\n\n    if (isLoading) return <Spinner />;\n    return (\n      <div className=\"home-list\">\n        {\n          postList.map(post => (\n            <section key={post.id} className=\"home-list__item\">\n              <Link to={`/posts/${post.id}`}>\n                <ListImg src={post.pic} />\n                <ListContent post={post} />\n              </Link>\n            </section>\n          ))\n        }\n      </div>\n    )\n  }\n}\n\nexport default withRouter(Home);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Home from './../components/home/Home';\nimport { Actions } from './../actions';\n\nconst HomeContainer = props => (<Home {...props} />);\n\nconst mapStateToProps = ({ posts }) => ({\n  postList: posts.postList,\n  isLoading: posts.isLoading,\n});\nconst mapDispatchToProps = {\n  getLimitPosts: Actions.GET_LIMIT_POSTS\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomeContainer)","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nconst PostEditBtn = ({ id }) => (\n  <>\n    <button type=\"submit\" className=\"add-post__submit btn-submit\">Submit</button>\n    {id && <Link className=\"btn-back\" to=\"/posts\">Back</Link>}\n  </>\n);\n\nconst PostCategory = ({ category, handleChange, categoryList }) => (\n  <select\n    name='category'\n    className='select'\n    defaultValue={category}\n    onChange={handleChange}>\n    {\n      categoryList.map((category, index) => (\n        <option key={index} value={category}>{category}</option>\n      ))\n    }\n  </select>\n);\n\nclass PostEdit extends Component {\n  constructor(props) {\n    super(props);\n    this.id = this.props.match.params.id;\n    this.state = {\n      author: '',\n      title: '',\n      body: '',\n      category: this.props.categoryList[0],\n    }\n  }\n\n\n  // 編輯文章頁面，把 store.post 當成 state 預設值\n  componentWillMount() {\n    if (this.id) {\n      const { getPost, post } = this.props;\n      getPost(this.id);\n      this.setState(post);\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      history,\n      isLoadingAddPost,\n      isLoadingUpdatePost,\n      addPostError,\n      updatePostError,\n      showMsg\n    } = this.props;\n\n    // addPost\n    if (prevProps.isLoadingAddPost !== isLoadingAddPost && !isLoadingAddPost) {\n      if (addPostError) {\n        showMsg('addPost', false);\n        return;\n      }\n\n      showMsg('addPost', true);\n      history.push('/posts');\n    }\n\n    // updatePost\n    else if (prevProps.isLoadingUpdatePost !== isLoadingUpdatePost && !isLoadingUpdatePost) {\n      if (updatePostError) {\n        showMsg('updatePost', false);\n        return;\n      }\n\n      showMsg('updatePost', true);\n      history.push('/posts');\n    }\n  }\n\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    })\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const { addPost, updatePost } = this.props;\n\n    if (!this.id) {\n      addPost(this.state);\n    } else {\n      updatePost(this.state, this.id);\n    }\n  }\n\n  render() {\n    const { author, title, body, category } = this.state;\n    const { categoryList } = this.props;\n    return (\n      <section className=\"add-post\">\n        <h2>{this.id ? '編輯文章' : '新增文章'}</h2>\n\n        <form onSubmit={this.handleSubmit}>\n          <ul>\n            <li className=\"add-post__author\">\n              <input type=\"text\" name='author'\n                defaultValue={author} onChange={this.handleChange} required />\n              <label>文章作者</label>\n            </li>\n            <li className=\"add-post__title\">\n              <input type=\"text\" name='title'\n                defaultValue={title} onChange={this.handleChange} required />\n              <label>文章標題</label>\n            </li>\n            <li className=\"add-post__category box\">\n              <label>分類：</label>\n              <PostCategory\n                category={category}\n                handleChange={this.handleChange}\n                categoryList={categoryList} />\n            </li>\n            <li className=\"add-post__content\">\n              <label className='theme--1'>文章內容</label>\n              <textarea className=\"input-textarea\" cols=\"30\" rows=\"5\"\n                name=\"body\" onChange={this.handleChange}\n                value={body} required></textarea>\n            </li>\n          </ul>\n          <PostEditBtn id={this.id} />\n        </form>\n      </section>\n    )\n  }\n};\n\nexport default PostEdit;","import React from 'react';\nimport { connect } from 'react-redux';\nimport PostEdit from './../components/post-edit/PostEdit';\nimport { Actions } from './../actions';\n\nconst PostEditContainer = props => (<PostEdit {...props} />);\n\nconst mapStateToProps = ({ posts, category }) => ({\n  post: posts.post,\n  isLoadingAddPost: posts.isLoadingAddPost,\n  isLoadingUpdatePost: posts.isLoadingUpdatePost,\n  addPostError: posts.addPostError,\n  upadatePostError: posts.updatePostError,\n  categoryList: category,\n});\nconst mapDispatchToProps = {\n  addPost: Actions.ADD_POST,\n  getPost: Actions.GET_POST,\n  updatePost: Actions.UPDATE_POST,\n  showMsg: Actions.SHOW_MSG\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PostEditContainer)","import React, { Component } from 'react';\nimport Spinner from '../spinner/Spinner';\nimport { withRouter } from 'react-router-dom';\nimport { getDate, getYear } from './../../utils';\nimport { Link } from 'react-router-dom';\n\nconst PostItem = ({ post }) => (\n  <Link to={`/posts/${post.id}`} className='post'>\n    <p className=\"post__date\">\n      <span>{getDate(post.createdAt)}</span>\n      {getYear(post.createdAt)}\n    </p>\n    <h4 className=\"post__title\">{post.title}</h4>\n    <p className=\"post__description\">{post.body}</p>\n  </Link>\n);\n\nconst PostEmptyStatus = () => (\n  <p className=\"post__status\">\n    沒有文章\n    <span role=\"img\" aria-label=\"Nauseated Face\"> 🤢</span>\n  </p>\n);\n\nconst PostSection = ({ category, postList }) => (\n  <>\n    <h2 className=\"post-list__title\">{category ? category : '全部文章'}</h2>\n    <div className=\"post-list\">\n      {\n        !postList.length ? <PostEmptyStatus /> :\n          postList.map(post => (\n            <PostItem post={post} key={post.id} />\n          ))\n      }\n    </div>\n  </>\n);\n\nclass PostList extends Component {\n  state = {\n    category: this.props.match.params.category,\n    isCategoryList: (this.props.match.path === '/category')\n  }\n\n  componentDidMount() {\n    const { getAllPosts, getCategoryPosts } = this.props;\n    const { category } = this.state;\n\n    if (category) {\n      getCategoryPosts(category)\n    } else {\n      getAllPosts();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { getCategoryPosts } = this.props;\n    const { category } = this.state;\n    const presentCategory = this.props.match.params.category;\n\n    if (category && prevProps.match.params.category !== presentCategory) {\n      getCategoryPosts(presentCategory);\n      this.updateCategory(presentCategory);\n    }\n  }\n\n  updateCategory(newCategory) {\n    this.setState({\n      category: newCategory\n    });\n  }\n\n\n  render() {\n    const { postList, isLoading, categoryList } = this.props;\n    const { category, isCategoryList } = this.state;\n    if (isLoading) return <Spinner />;\n\n    return (\n      isCategoryList ?\n        (\n          categoryList.map((category, i) => (\n            <PostSection\n              key={i}\n              category={category}\n              postList={postList.filter(post => post.category === category)}\n            />\n          ))\n        ) :\n        (\n          <PostSection\n            postList={postList}\n            category={category}\n          />\n        )\n    )\n  }\n}\nexport default withRouter(PostList);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PostList from './../components/post-list/PostList';\nimport { Actions } from './../actions';\n\nconst PostListContainer = props => (<PostList {...props} />);\n\nconst mapStateToProps = ({ posts, category }) => ({\n  postList: posts.postList,\n  isLoading: posts.isLoading,\n  categoryList: category,\n});\nconst mapDispatchToProps = {\n  getAllPosts: Actions.GET_ALL_POSTS,\n  getCategoryPosts: Actions.GET_CATEGORY_POSTS,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PostListContainer)","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\n\n// 選 style : https://highlightjs.org/\nimport { rainbow } from 'react-syntax-highlighter/dist/esm/styles/hljs';\n\n\nexport default class CodeBlock extends React.PureComponent {\n  static propTypes = {\n    value: PropTypes.string.isRequired,\n    language: PropTypes.string,\n  }\n\n  static defaultProps = {\n    language: null,\n  }\n\n  render() {\n    const { language, value } = this.props;\n\n    return (\n      <SyntaxHighlighter language={language} style={rainbow}>\n        {value}\n      </SyntaxHighlighter>\n    );\n  }\n}","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Spinner from '../spinner/Spinner'\nimport { getDate } from './../../utils';\nimport ReactMarkdown from \"react-markdown\";\nimport CodeBlock from \"./CodeBlock\";\n\n\nconst ArticleInfo = ({ post }) => (\n  <div className=\"article__info\">\n    <p className=\"article__author\">{post.author}</p>\n    <p className=\"article__date\">{getDate(post.createdAt)}</p>\n  </div>\n)\n\nconst ArticleCategory = ({ post }) => (\n  <p className=\"article__category\">\n    category:\n    <Link to={`/category/${post.category}`}>{post.category}</Link>\n  </p>\n)\n\n\nconst ArticleImg = ({ post }) => (\n  !post.pic ? null : (\n    <div className=\"pic article__cover\">\n      <img src={post.pic} alt=\"\" />\n    </div>\n  )\n)\n\nconst ArticleBody = ({ post }) => (\n  <div className=\"article__body\">\n    <ReactMarkdown\n      source={post.body}\n      renderers={{ code: CodeBlock }}\n    />\n  </div>\n)\n\nconst ArticleOperate = ({ post, handleDelete }) => (\n  <div className=\"article__operate\">\n    <Link className=\"btn btn-back active\" to='/posts'>Back</Link>\n    <Link className=\"btn btn-edit\" to={`/edit-post/${post.id}`}>Edit</Link>\n    <button className=\"btn btn-delete\" onClick={handleDelete}>Delete</button>\n  </div>\n)\n\nclass Article extends Component {\n  constructor(props) {\n    super(props);\n    this.postId = this.props.match.params.id;\n  }\n\n  componentDidMount() {\n    const { getPost } = this.props;\n    getPost(this.postId);\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      history,\n      isLoadingDeletePost,\n      showMsg,\n      deletePostError,\n      getPost } = this.props;\n\n    const presentId = this.props.match.params.id;\n\n    if (Number(presentId) !== prevProps.post.id) {\n      getPost(presentId);\n      return;\n    }\n\n    if (prevProps.isLoadingDeletePost !== isLoadingDeletePost && !isLoadingDeletePost) {\n      if (deletePostError) {\n        showMsg('deletePost', false);\n        return;\n      }\n\n      showMsg('deletePost', true);\n      history.push('/posts');\n    }\n  }\n\n  handleDelete = () => {\n    const { post, deletePost, history, showMsg } = this.props;\n    deletePost(post.id, history, showMsg)\n  }\n\n  render() {\n    const { post, isLoadingGetPost } = this.props;\n\n    if (isLoadingGetPost) return <Spinner />;\n    return (\n      <section className=\"article\">\n        <h2 className=\"article__title\">{post.title}</h2>\n        <ArticleCategory post={post} />\n        <ArticleImg post={post} />\n        <ArticleBody post={post} />\n        <ArticleInfo post={post} />\n        <ArticleOperate post={post} handleDelete={this.handleDelete} />\n      </section>\n    )\n  }\n};\n\nexport default Article;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Article from './../components/article/Article';\nimport { Actions } from './../actions';\n\nconst ArticleContainer = props => (<Article {...props} />);\n\nconst mapStateToProps = ({ posts }) => ({\n  post: posts.post,\n  isLoadingDeletePost: posts.isLoadingDeletePost,\n  isLoadingGetPost: posts.isLoadingGetPost,\n  deletePostError: posts.deletePostError,\n});\nconst mapDispatchToProps = {\n  getPost: Actions.GET_POST,\n  deletePost: Actions.DELETE_POST,\n  showMsg: Actions.SHOW_MSG,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ArticleContainer)","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport Header from './../components/header/Header'\nimport About from './../components/about/About';\n\nimport Nav from './Nav';\nimport Msg from './Msg';\nimport Home from './Home';\nimport PostEdit from './PostEdit';\nimport PostList from './PostList';\nimport Article from './Article';\nimport './../scss/index.scss';\n\n\n\nclass App extends Component {\n  render() {\n    return (\n      <Router basename={process.env.PUBLIC_URL}>\n        <div className=\"wrapper\" >\n          <Nav />\n          <Header />\n          <main className=\"container\">\n            <Msg />\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"/about\" component={About} />\n            <Route exact path=\"/posts\" component={PostList} />\n            <Route exact path=\"/category\" component={PostList} />\n            <Route exact path=\"/category/:category\" component={PostList} />\n            <Route path=\"/posts/:id\" component={Article} />\n            <Route path=\"/add-post\" component={PostEdit} />\n            <Route path=\"/edit-post/:id\" component={PostEdit} />\n          </main>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","import { ActionTypes } from \"./../actions\";\n\nconst initState = {\n  postList: [],\n  post: {},\n  isLoading: false,\n  isLoadingAddPost: false,\n  isLoadingGetPost: false,\n  isLoadingDeletePost: false,\n  isLoadingUpdatePost: false,\n  addPostError: null,\n  updatePostError: null,\n  deletePostError: null,\n}\n\n// reducer\nexport default function postsReducer(state = initState, action) {\n  switch (action.type) {\n\n    /* get all ---------- */\n    case `${ActionTypes.GET_ALL_POSTS}_PENDING`:\n    case `${ActionTypes.GET_LIMIT_POSTS}_PENDING`:\n    case `${ActionTypes.GET_CATEGORY_POSTS}_PENDING`:\n      return {\n        ...state,\n        isLoading: true,\n      }\n\n    case `${ActionTypes.GET_ALL_POSTS}_FULFILLED`:\n    case `${ActionTypes.GET_LIMIT_POSTS}_FULFILLED`:\n    case `${ActionTypes.GET_CATEGORY_POSTS}_FULFILLED`:\n      return {\n        ...state,\n        isLoading: false,\n        postList: action.payload.data,\n      }\n\n    /* get ---------- */\n    case `${ActionTypes.GET_POST}_PENDING`:\n      return {\n        ...state,\n        isLoadingGetPost: true,\n      }\n\n    case `${ActionTypes.GET_POST}_FULFILLED`:\n      return {\n        ...state,\n        isLoadingGetPost: false,\n        post: action.payload.data\n      }\n\n\n    /* add ---------- */\n    case `${ActionTypes.ADD_POST}_PENDING`:\n      return {\n        ...state,\n        isLoadingAddPost: true,\n      }\n\n    case `${ActionTypes.ADD_POST}_FULFILLED`:\n      return {\n        ...state,\n        isLoadingAddPost: false,\n      }\n\n    case `${ActionTypes.ADD_POST}_REJECTED`:\n      return {\n        ...state,\n        addPostError: true,\n      }\n\n    /* delete ---------- */\n    case `${ActionTypes.DELETE_POST}_PENDING`:\n      return {\n        ...state,\n        isLoadingDeletePost: true,\n      }\n\n    case `${ActionTypes.DELETE_POST}_FULFILLED`:\n      return {\n        ...state,\n        isLoadingDeletePost: false,\n      }\n\n    case `${ActionTypes.DELETE_POST}_REJECTED`:\n      return {\n        ...state,\n        deletePostError: true,\n      }\n\n    /* update ---------- */\n    case `${ActionTypes.UPDATE_POST}_PENDING`:\n      return {\n        ...state,\n        isLoadingUpdatePost: true,\n      }\n\n    case `${ActionTypes.UPDATE_POST}_FULFILLED`:\n      return {\n        ...state,\n        isLoadingUpdatePost: false,\n      }\n\n    case `${ActionTypes.UPDATE_POST}_REJECTED`:\n      return {\n        ...state,\n        updatePostError: true,\n      }\n\n\n    default:\n      return state\n  }\n}\n","import { ActionTypes } from \"./../actions\";\n\nconst initState = {\n  isActive: false,\n  isSuccess: false,\n  type: '',\n}\n\n// reducer\nexport default function msgReducer(state = initState, action) {\n  switch (action.type) {\n    case ActionTypes.SHOW_MSG:\n      return {\n        ...state,\n        isActive: true,\n        isSuccess: action.result,\n        type: action.msgType,\n      }\n\n    case ActionTypes.HIDE_MSG:\n      return {\n        ...state,\n        isActive: false,\n      }\n\n    default:\n      return state\n  }\n}\n","const initState = [\n  'React 基礎',\n  'React 生命週期',\n]\n\n// reducer\nexport default function categoryReducer(state = initState) {\n  return state\n}\n","import { ActionTypes } from \"./../actions\";\n\nconst initState = {\n  results: null,\n  isLoadingResults: false,\n}\n\n// reducer\nexport default function searchReducer(state = initState, action) {\n  switch (action.type) {\n    case `${ActionTypes.GET_SEARCH}_PENDING`:\n      return {\n        ...state,\n        isLoadingResults: true,\n      }\n\n    case `${ActionTypes.GET_SEARCH}_FULFILLED`:\n      return {\n        ...state,\n        results: action.payload.data,\n        isLoadingResults: false,\n      }\n\n    case `${ActionTypes.CLEAR_SEARCH}`:\n      return {\n        ...state,\n        results: null,\n      }\n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport postsReducer from \"./posts\";\nimport msgReducer from \"./msg\";\nimport categoryReducer from \"./category\";\nimport searchReducer from \"./search\";\n\nconst reducer = combineReducers({\n  posts: postsReducer,\n  msg: msgReducer,\n  category: categoryReducer,\n  search: searchReducer,\n});\n\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport App from './containers/App';\nimport reducer from './reducers';\nimport logger from 'redux-logger';\nimport promiseMiddleware from 'redux-promise-middleware';\n\nconst storeWithMiddleware = applyMiddleware(\n  promiseMiddleware,\n  // logger // => logger must be the last one\n)(createStore);\n\n\n\nReactDOM.render(\n  <Provider store={storeWithMiddleware(reducer)}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}